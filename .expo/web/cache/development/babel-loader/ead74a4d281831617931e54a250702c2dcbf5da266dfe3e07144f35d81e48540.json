{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { COLORS, SIZES, SHADOWS, assets } from \"../constants\";\nimport { SubInfo, EthPrice, NFTTitle } from \"./SubInfo\";\nimport { RectButton, CircleButton } from \"./Button\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar NFTCard = function NFTCard(_ref) {\n  var data = _ref.data;\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: _objectSpread({\n      backgroundColor: COLORS.white,\n      borderRadius: SIZES.font,\n      marginBottom: SIZES.extraLarge,\n      margin: SIZES.base\n    }, SHADOWS.dark),\n    children: [_jsxs(View, {\n      style: {\n        width: \"100%\",\n        height: 250\n      },\n      children: [_jsx(Image, {\n        source: data.image,\n        resizeMode: \"cover\",\n        style: {\n          width: \"100%\",\n          height: \"100%\",\n          borderTopLeftRadius: SIZES.font,\n          borderTopRightRadius: SIZES.font\n        }\n      }), _jsx(CircleButton, {\n        imgUrl: assets.heart,\n        right: 10,\n        top: 10\n      })]\n    }), _jsx(SubInfo, {}), _jsxs(View, {\n      style: {\n        width: \"100%\",\n        padding: SIZES.font\n      },\n      children: [_jsx(NFTTitle, {\n        title: data.name,\n        subTitle: data.creator,\n        titleSize: SIZES.large,\n        subTitleSize: SIZES.small\n      }), _jsxs(View, {\n        style: {\n          marginTop: SIZES.font,\n          flexDirection: \"row\",\n          justifyContent: \"space-between\",\n          alignItems: \"center\"\n        },\n        children: [_jsx(EthPrice, {\n          price: data.price\n        }), _jsx(RectButton, {\n          minWidth: 120,\n          fontSize: SIZES.font,\n          handlePress: function handlePress() {\n            return navigation.navigate(\"Details\", {\n              data: data\n            });\n          }\n        })]\n      })]\n    })]\n  });\n};\nexport default NFTCard;","map":{"version":3,"names":["React","useNavigation","View","Image","COLORS","SIZES","SHADOWS","assets","SubInfo","EthPrice","NFTTitle","RectButton","CircleButton","jsx","_jsx","jsxs","_jsxs","NFTCard","_ref","data","navigation","style","_objectSpread","backgroundColor","white","borderRadius","font","marginBottom","extraLarge","margin","base","dark","children","width","height","source","image","resizeMode","borderTopLeftRadius","borderTopRightRadius","imgUrl","heart","right","top","padding","title","name","subTitle","creator","titleSize","large","subTitleSize","small","marginTop","flexDirection","justifyContent","alignItems","price","minWidth","fontSize","handlePress","navigate"],"sources":["D:/AppLocalRepo/React/react-native/react-native-marketplace/components/NFTCard.js"],"sourcesContent":["import React from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport { View, Image } from \"react-native\";\r\n\r\nimport { COLORS, SIZES, SHADOWS, assets } from \"../constants\";\r\nimport { SubInfo, EthPrice, NFTTitle } from \"./SubInfo\";\r\nimport { RectButton, CircleButton } from \"./Button\";\r\n\r\nconst NFTCard = ({ data }) => {\r\n  const navigation = useNavigation();\r\n\r\n  return (\r\n    <View\r\n      style={{\r\n        backgroundColor: COLORS.white,\r\n        borderRadius: SIZES.font,\r\n        marginBottom: SIZES.extraLarge,\r\n        margin: SIZES.base,\r\n        ...SHADOWS.dark,\r\n      }}\r\n    >\r\n      <View\r\n        style={{\r\n          width: \"100%\",\r\n          height: 250,\r\n        }}\r\n      >\r\n        <Image\r\n          source={data.image}\r\n          resizeMode=\"cover\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"100%\",\r\n            borderTopLeftRadius: SIZES.font,\r\n            borderTopRightRadius: SIZES.font,\r\n          }}\r\n        />\r\n\r\n        <CircleButton imgUrl={assets.heart} right={10} top={10} />\r\n      </View>\r\n\r\n      <SubInfo />\r\n\r\n      <View style={{ width: \"100%\", padding: SIZES.font }}>\r\n        <NFTTitle\r\n          title={data.name}\r\n          subTitle={data.creator}\r\n          titleSize={SIZES.large}\r\n          subTitleSize={SIZES.small}\r\n        />\r\n\r\n        <View\r\n          style={{\r\n            marginTop: SIZES.font,\r\n            flexDirection: \"row\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <EthPrice price={data.price} />\r\n          <RectButton\r\n            minWidth={120}\r\n            fontSize={SIZES.font}\r\n            handlePress={() => navigation.navigate(\"Details\", { data })}\r\n          />\r\n        </View>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default NFTCard;\r\n"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,QAAQ,0BAA0B;AAAC,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAGzD,SAASC,MAAM,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM;AACvC,SAASC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ;AACpC,SAASC,UAAU,EAAEC,YAAY;AAAmB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpD,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAAC,IAAA,EAAiB;EAAA,IAAXC,IAAI,GAAAD,IAAA,CAAJC,IAAI;EACrB,IAAMC,UAAU,GAAGnB,aAAa,CAAC,CAAC;EAElC,OACEe,KAAA,CAACd,IAAI;IACHmB,KAAK,EAAAC,aAAA;MACHC,eAAe,EAAEnB,MAAM,CAACoB,KAAK;MAC7BC,YAAY,EAAEpB,KAAK,CAACqB,IAAI;MACxBC,YAAY,EAAEtB,KAAK,CAACuB,UAAU;MAC9BC,MAAM,EAAExB,KAAK,CAACyB;IAAI,GACfxB,OAAO,CAACyB,IAAI,CACf;IAAAC,QAAA,GAEFhB,KAAA,CAACd,IAAI;MACHmB,KAAK,EAAE;QACLY,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE;MACV,CAAE;MAAAF,QAAA,GAEFlB,IAAA,CAACX,KAAK;QACJgC,MAAM,EAAEhB,IAAI,CAACiB,KAAM;QACnBC,UAAU,EAAC,OAAO;QAClBhB,KAAK,EAAE;UACLY,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACdI,mBAAmB,EAAEjC,KAAK,CAACqB,IAAI;UAC/Ba,oBAAoB,EAAElC,KAAK,CAACqB;QAC9B;MAAE,CACH,CAAC,EAEFZ,IAAA,CAACF,YAAY;QAAC4B,MAAM,EAAEjC,MAAM,CAACkC,KAAM;QAACC,KAAK,EAAE,EAAG;QAACC,GAAG,EAAE;MAAG,CAAE,CAAC;IAAA,CACtD,CAAC,EAEP7B,IAAA,CAACN,OAAO,IAAE,CAAC,EAEXQ,KAAA,CAACd,IAAI;MAACmB,KAAK,EAAE;QAAEY,KAAK,EAAE,MAAM;QAAEW,OAAO,EAAEvC,KAAK,CAACqB;MAAK,CAAE;MAAAM,QAAA,GAClDlB,IAAA,CAACJ,QAAQ;QACPmC,KAAK,EAAE1B,IAAI,CAAC2B,IAAK;QACjBC,QAAQ,EAAE5B,IAAI,CAAC6B,OAAQ;QACvBC,SAAS,EAAE5C,KAAK,CAAC6C,KAAM;QACvBC,YAAY,EAAE9C,KAAK,CAAC+C;MAAM,CAC3B,CAAC,EAEFpC,KAAA,CAACd,IAAI;QACHmB,KAAK,EAAE;UACLgC,SAAS,EAAEhD,KAAK,CAACqB,IAAI;UACrB4B,aAAa,EAAE,KAAK;UACpBC,cAAc,EAAE,eAAe;UAC/BC,UAAU,EAAE;QACd,CAAE;QAAAxB,QAAA,GAEFlB,IAAA,CAACL,QAAQ;UAACgD,KAAK,EAAEtC,IAAI,CAACsC;QAAM,CAAE,CAAC,EAC/B3C,IAAA,CAACH,UAAU;UACT+C,QAAQ,EAAE,GAAI;UACdC,QAAQ,EAAEtD,KAAK,CAACqB,IAAK;UACrBkC,WAAW,EAAE,SAAAA,YAAA;YAAA,OAAMxC,UAAU,CAACyC,QAAQ,CAAC,SAAS,EAAE;cAAE1C,IAAI,EAAJA;YAAK,CAAC,CAAC;UAAA;QAAC,CAC7D,CAAC;MAAA,CACE,CAAC;IAAA,CACH,CAAC;EAAA,CACH,CAAC;AAEX,CAAC;AAED,eAAeF,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}